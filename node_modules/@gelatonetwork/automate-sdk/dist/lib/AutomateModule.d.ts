import { ModuleArgsParams, ModuleData, ResolverParams, TriggerConfig, TriggerParams, Web3FunctionParams, Web3FunctionSchema, Web3FunctionUserArgs, Web3FunctionUserArgsSchema } from "../types";
export declare class AutomateModule {
    encodeModuleArgs: (moduleArgsParams: Partial<ModuleArgsParams>) => Promise<ModuleData>;
    decodeModuleArgs: (moduleData: ModuleData) => Promise<ModuleArgsParams>;
    encodeResolverArgs: (resolverAddress: string, resolverData: string) => string;
    decodeResolverArgs: (encodedModuleArgs: string) => ResolverParams;
    encodeWeb3FunctionArgs: (web3FunctionHash: string, web3FunctionArgs?: Web3FunctionUserArgs, web3FunctionArgsHex?: string) => Promise<string>;
    decodeWeb3FunctionArgs: (encodedModuleArgs: string) => Promise<Web3FunctionParams>;
    encodeTriggerArgs: (trigger: TriggerConfig) => Promise<string>;
    decodeTriggerArgs: (encodedModuleArgs: string) => Promise<TriggerParams>;
    decodeWeb3FunctionArgsHex: (web3FunctionArgsHex: string, schemaOption: {
        web3FunctionHash?: string;
        userArgsSchema?: Web3FunctionUserArgsSchema;
    }) => Promise<{
        web3FunctionArgs: Web3FunctionUserArgs;
        schema?: Web3FunctionSchema;
    } | null>;
    private getAbiTypesAndKeysFromSchema;
}
